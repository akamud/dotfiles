[core]
    excludesfile = /Users/Mahmoud/.gitignore_global
    editor = code --wait
    pager = delta
[difftool]
    cmd = /Applications/p4merge.app/Contents/MacOS/p4merge \"$LOCAL\" \"$REMOTE\"
    path = 
[mergetool]
    cmd = /Applications/p4merge.app/Contents/MacOS/p4merge \"$BASE\" \"$LOCAL\" \"$REMOTE\" \"$MERGED\"
    trustExitCode = true
[user]
    name = Mahmoud Ali
    email = muddibr@gmail.com
[color]
    diff = always
    interactive = always
    status = always
    branch = always
[alias]
    st = status
    sc = !git diff --stat | tail -n1
    ci = commit
    cm = !git add -A && git commit -m
    cmm = "!g() { git add -A && git commit -m \"$*\"; }; g"
    co = checkout
    ce = config --global -e
    br = branch
    fixup = commit --all --amend --no-edit
    un = !GIT_CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD) && git log origin/$GIT_CURRENT_BRANCH..
    pend = !GIT_CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD) && git log ..origin/$GIT_CURRENT_BRANCH
    save = !git add -A && git commit -m 'SAVEPOINT'
    wip = !git add -A && git commit -m "WIP"
    undo = reset --soft HEAD~1
    wipe = !git add -A && git commit -qm 'WIPE SAVEPOINT' && git reset HEAD~1 --hard
    bclean = "!f() { git branch --merged ${1-master} | grep -v " ${1-master}$" | xargs -r git branch -d; }; f"
    we = "for branch in $(git branch --list | grep ma/); do git branch -d $branch; done;"
    amend = commit -a --amend
    bl = show-branch --list
    fap = fetch --all --prune
    bgone = !git branch -vv | grep ': gone]' | awk '{print $1}'
    delgone = !git branch -vv | grep ': gone]' | awk '{print $1}' | xargs git branch -D
    lg = !"git lg1"
    lg1 = !"git lg1-specific --all"
    lg2 = !"git lg2-specific --all"
    lg3 = !"git lg3-specific --all"
    lg1-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(auto)%d%C(reset)'
    lg2-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(auto)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)'
    lg3-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset) %C(bold cyan)(committed: %cD)%C(reset) %C(auto)%d%C(reset)%n''          %C(white)%s%C(reset)%n''          %C(dim white)- %an <%ae> %C(reset) %C(dim white)(committer: %cn <%ce>)%C(reset)'
    filesIn = diff-tree --no-commit-id --name-only -r 
    breset = "!git checkout master && git branch | grep -v -e master | xargs -n1 git branch -D"
    backup = "!git branch -M \"$(git rev-parse --abbrev-ref HEAD)\"-backup"
    nw = "!f() { git branch -M \"${1}\" \"${1}\"-backup && git checkout -b \"${1}\" && git cherry-pick $(git merge-base $2 $1-backup)..\"$1\"-backup; }; f"
    debug = !GIT_TRACE=1 git 
    sync = "!git pull upstream \"$(git rev-parse --abbrev-ref HEAD)\""
    pushor = push -u origin HEAD
[pull]
    rebase = false
[push]
    default = simple
[pull]
	ff = only
[log]
    decorate = full
    abbrevCommit = true
[format]
    pretty=format:%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset
[commit]
    template = /Users/mahmoud/.stCommitMsg
[difftool "sourcetree"]
    cmd = /Applications/p4merge.app/Contents/MacOS/p4merge \"$LOCAL\" \"$REMOTE\"
    path = 
[mergetool "sourcetree"]
    cmd = /Applications/p4merge.app/Contents/MacOS/p4merge \"$BASE\" \"$LOCAL\" \"$REMOTE\" \"$MERGED\"
    trustExitCode = true
[init]
    defaultBranch = main
[delta]
    line-numbers = true